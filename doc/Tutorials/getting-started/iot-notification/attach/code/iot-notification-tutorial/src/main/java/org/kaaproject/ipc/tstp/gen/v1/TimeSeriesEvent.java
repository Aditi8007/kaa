/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.kaaproject.ipc.tstp.gen.v1;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TimeSeriesEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3651407560913987205L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimeSeriesEvent\",\"namespace\":\"org.kaaproject.ipc.tstp.gen.v1\",\"fields\":[{\"name\":\"correlationId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Message ID primarily used to track message processing across services\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"Message creation UNIX timestamp in milliseconds\"},{\"name\":\"timeout\",\"type\":\"long\",\"doc\":\"Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.\",\"default\":0},{\"name\":\"appVersionName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Application version name the data is sent for\"},{\"name\":\"endpointId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Identifier of the endpoint that data points belong to\"},{\"name\":\"timeSeriesName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Name of the time series that data points belong to\"},{\"name\":\"dataPoints\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DataPoint\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"Data point UNIX timestamp in milliseconds\"},{\"name\":\"values\",\"type\":{\"type\":\"map\",\"values\":[\"boolean\",\"int\",\"long\",\"float\",\"double\",{\"type\":\"string\",\"avro.java.string\":\"String\"},\"bytes\",\"null\"],\"avro.java.string\":\"String\"},\"doc\":\"Map of data point values with value names represented as map keys.\"}]}},\"doc\":\"Array of endpoint time series data points\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TimeSeriesEvent> ENCODER =
      new BinaryMessageEncoder<TimeSeriesEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TimeSeriesEvent> DECODER =
      new BinaryMessageDecoder<TimeSeriesEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TimeSeriesEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TimeSeriesEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TimeSeriesEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TimeSeriesEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TimeSeriesEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TimeSeriesEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TimeSeriesEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TimeSeriesEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Message ID primarily used to track message processing across services */
   private java.lang.String correlationId;
  /** Message creation UNIX timestamp in milliseconds */
   private long timestamp;
  /** Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration. */
   private long timeout;
  /** Application version name the data is sent for */
   private java.lang.String appVersionName;
  /** Identifier of the endpoint that data points belong to */
   private java.lang.String endpointId;
  /** Name of the time series that data points belong to */
   private java.lang.String timeSeriesName;
  /** Array of endpoint time series data points */
   private java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint> dataPoints;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TimeSeriesEvent() {}

  /**
   * All-args constructor.
   * @param correlationId Message ID primarily used to track message processing across services
   * @param timestamp Message creation UNIX timestamp in milliseconds
   * @param timeout Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.
   * @param appVersionName Application version name the data is sent for
   * @param endpointId Identifier of the endpoint that data points belong to
   * @param timeSeriesName Name of the time series that data points belong to
   * @param dataPoints Array of endpoint time series data points
   */
  public TimeSeriesEvent(java.lang.String correlationId, java.lang.Long timestamp, java.lang.Long timeout, java.lang.String appVersionName, java.lang.String endpointId, java.lang.String timeSeriesName, java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint> dataPoints) {
    this.correlationId = correlationId;
    this.timestamp = timestamp;
    this.timeout = timeout;
    this.appVersionName = appVersionName;
    this.endpointId = endpointId;
    this.timeSeriesName = timeSeriesName;
    this.dataPoints = dataPoints;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return correlationId;
    case 1: return timestamp;
    case 2: return timeout;
    case 3: return appVersionName;
    case 4: return endpointId;
    case 5: return timeSeriesName;
    case 6: return dataPoints;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: correlationId = (java.lang.String)value$; break;
    case 1: timestamp = (java.lang.Long)value$; break;
    case 2: timeout = (java.lang.Long)value$; break;
    case 3: appVersionName = (java.lang.String)value$; break;
    case 4: endpointId = (java.lang.String)value$; break;
    case 5: timeSeriesName = (java.lang.String)value$; break;
    case 6: dataPoints = (java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'correlationId' field.
   * @return Message ID primarily used to track message processing across services
   */
  public java.lang.String getCorrelationId() {
    return correlationId;
  }


  /**
   * Sets the value of the 'correlationId' field.
   * Message ID primarily used to track message processing across services
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.String value) {
    this.correlationId = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return Message creation UNIX timestamp in milliseconds
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * Message creation UNIX timestamp in milliseconds
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'timeout' field.
   * @return Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.
   */
  public long getTimeout() {
    return timeout;
  }


  /**
   * Sets the value of the 'timeout' field.
   * Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.
   * @param value the value to set.
   */
  public void setTimeout(long value) {
    this.timeout = value;
  }

  /**
   * Gets the value of the 'appVersionName' field.
   * @return Application version name the data is sent for
   */
  public java.lang.String getAppVersionName() {
    return appVersionName;
  }


  /**
   * Sets the value of the 'appVersionName' field.
   * Application version name the data is sent for
   * @param value the value to set.
   */
  public void setAppVersionName(java.lang.String value) {
    this.appVersionName = value;
  }

  /**
   * Gets the value of the 'endpointId' field.
   * @return Identifier of the endpoint that data points belong to
   */
  public java.lang.String getEndpointId() {
    return endpointId;
  }


  /**
   * Sets the value of the 'endpointId' field.
   * Identifier of the endpoint that data points belong to
   * @param value the value to set.
   */
  public void setEndpointId(java.lang.String value) {
    this.endpointId = value;
  }

  /**
   * Gets the value of the 'timeSeriesName' field.
   * @return Name of the time series that data points belong to
   */
  public java.lang.String getTimeSeriesName() {
    return timeSeriesName;
  }


  /**
   * Sets the value of the 'timeSeriesName' field.
   * Name of the time series that data points belong to
   * @param value the value to set.
   */
  public void setTimeSeriesName(java.lang.String value) {
    this.timeSeriesName = value;
  }

  /**
   * Gets the value of the 'dataPoints' field.
   * @return Array of endpoint time series data points
   */
  public java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint> getDataPoints() {
    return dataPoints;
  }


  /**
   * Sets the value of the 'dataPoints' field.
   * Array of endpoint time series data points
   * @param value the value to set.
   */
  public void setDataPoints(java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint> value) {
    this.dataPoints = value;
  }

  /**
   * Creates a new TimeSeriesEvent RecordBuilder.
   * @return A new TimeSeriesEvent RecordBuilder
   */
  public static org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder newBuilder() {
    return new org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder();
  }

  /**
   * Creates a new TimeSeriesEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TimeSeriesEvent RecordBuilder
   */
  public static org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder newBuilder(org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder other) {
    if (other == null) {
      return new org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder();
    } else {
      return new org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder(other);
    }
  }

  /**
   * Creates a new TimeSeriesEvent RecordBuilder by copying an existing TimeSeriesEvent instance.
   * @param other The existing instance to copy.
   * @return A new TimeSeriesEvent RecordBuilder
   */
  public static org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder newBuilder(org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent other) {
    if (other == null) {
      return new org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder();
    } else {
      return new org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for TimeSeriesEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimeSeriesEvent>
    implements org.apache.avro.data.RecordBuilder<TimeSeriesEvent> {

    /** Message ID primarily used to track message processing across services */
    private java.lang.String correlationId;
    /** Message creation UNIX timestamp in milliseconds */
    private long timestamp;
    /** Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration. */
    private long timeout;
    /** Application version name the data is sent for */
    private java.lang.String appVersionName;
    /** Identifier of the endpoint that data points belong to */
    private java.lang.String endpointId;
    /** Name of the time series that data points belong to */
    private java.lang.String timeSeriesName;
    /** Array of endpoint time series data points */
    private java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint> dataPoints;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[0].schema(), other.correlationId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timeout)) {
        this.timeout = data().deepCopy(fields()[2].schema(), other.timeout);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.appVersionName)) {
        this.appVersionName = data().deepCopy(fields()[3].schema(), other.appVersionName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.endpointId)) {
        this.endpointId = data().deepCopy(fields()[4].schema(), other.endpointId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.timeSeriesName)) {
        this.timeSeriesName = data().deepCopy(fields()[5].schema(), other.timeSeriesName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.dataPoints)) {
        this.dataPoints = data().deepCopy(fields()[6].schema(), other.dataPoints);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing TimeSeriesEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.correlationId)) {
        this.correlationId = data().deepCopy(fields()[0].schema(), other.correlationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeout)) {
        this.timeout = data().deepCopy(fields()[2].schema(), other.timeout);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.appVersionName)) {
        this.appVersionName = data().deepCopy(fields()[3].schema(), other.appVersionName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.endpointId)) {
        this.endpointId = data().deepCopy(fields()[4].schema(), other.endpointId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timeSeriesName)) {
        this.timeSeriesName = data().deepCopy(fields()[5].schema(), other.timeSeriesName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.dataPoints)) {
        this.dataPoints = data().deepCopy(fields()[6].schema(), other.dataPoints);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'correlationId' field.
      * Message ID primarily used to track message processing across services
      * @return The value.
      */
    public java.lang.String getCorrelationId() {
      return correlationId;
    }


    /**
      * Sets the value of the 'correlationId' field.
      * Message ID primarily used to track message processing across services
      * @param value The value of 'correlationId'.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder setCorrelationId(java.lang.String value) {
      validate(fields()[0], value);
      this.correlationId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'correlationId' field has been set.
      * Message ID primarily used to track message processing across services
      * @return True if the 'correlationId' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'correlationId' field.
      * Message ID primarily used to track message processing across services
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder clearCorrelationId() {
      correlationId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * Message creation UNIX timestamp in milliseconds
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * Message creation UNIX timestamp in milliseconds
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder setTimestamp(long value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * Message creation UNIX timestamp in milliseconds
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * Message creation UNIX timestamp in milliseconds
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder clearTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeout' field.
      * Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.
      * @return The value.
      */
    public long getTimeout() {
      return timeout;
    }


    /**
      * Sets the value of the 'timeout' field.
      * Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.
      * @param value The value of 'timeout'.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder setTimeout(long value) {
      validate(fields()[2], value);
      this.timeout = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timeout' field has been set.
      * Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.
      * @return True if the 'timeout' field has been set, false otherwise.
      */
    public boolean hasTimeout() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timeout' field.
      * Amount of milliseconds since the timestamp until the message expires. Value of 0 is reserved to indicate no expiration.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder clearTimeout() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'appVersionName' field.
      * Application version name the data is sent for
      * @return The value.
      */
    public java.lang.String getAppVersionName() {
      return appVersionName;
    }


    /**
      * Sets the value of the 'appVersionName' field.
      * Application version name the data is sent for
      * @param value The value of 'appVersionName'.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder setAppVersionName(java.lang.String value) {
      validate(fields()[3], value);
      this.appVersionName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'appVersionName' field has been set.
      * Application version name the data is sent for
      * @return True if the 'appVersionName' field has been set, false otherwise.
      */
    public boolean hasAppVersionName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'appVersionName' field.
      * Application version name the data is sent for
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder clearAppVersionName() {
      appVersionName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'endpointId' field.
      * Identifier of the endpoint that data points belong to
      * @return The value.
      */
    public java.lang.String getEndpointId() {
      return endpointId;
    }


    /**
      * Sets the value of the 'endpointId' field.
      * Identifier of the endpoint that data points belong to
      * @param value The value of 'endpointId'.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder setEndpointId(java.lang.String value) {
      validate(fields()[4], value);
      this.endpointId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'endpointId' field has been set.
      * Identifier of the endpoint that data points belong to
      * @return True if the 'endpointId' field has been set, false otherwise.
      */
    public boolean hasEndpointId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'endpointId' field.
      * Identifier of the endpoint that data points belong to
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder clearEndpointId() {
      endpointId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeSeriesName' field.
      * Name of the time series that data points belong to
      * @return The value.
      */
    public java.lang.String getTimeSeriesName() {
      return timeSeriesName;
    }


    /**
      * Sets the value of the 'timeSeriesName' field.
      * Name of the time series that data points belong to
      * @param value The value of 'timeSeriesName'.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder setTimeSeriesName(java.lang.String value) {
      validate(fields()[5], value);
      this.timeSeriesName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'timeSeriesName' field has been set.
      * Name of the time series that data points belong to
      * @return True if the 'timeSeriesName' field has been set, false otherwise.
      */
    public boolean hasTimeSeriesName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'timeSeriesName' field.
      * Name of the time series that data points belong to
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder clearTimeSeriesName() {
      timeSeriesName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataPoints' field.
      * Array of endpoint time series data points
      * @return The value.
      */
    public java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint> getDataPoints() {
      return dataPoints;
    }


    /**
      * Sets the value of the 'dataPoints' field.
      * Array of endpoint time series data points
      * @param value The value of 'dataPoints'.
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder setDataPoints(java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint> value) {
      validate(fields()[6], value);
      this.dataPoints = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'dataPoints' field has been set.
      * Array of endpoint time series data points
      * @return True if the 'dataPoints' field has been set, false otherwise.
      */
    public boolean hasDataPoints() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'dataPoints' field.
      * Array of endpoint time series data points
      * @return This builder.
      */
    public org.kaaproject.ipc.tstp.gen.v1.TimeSeriesEvent.Builder clearDataPoints() {
      dataPoints = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TimeSeriesEvent build() {
      try {
        TimeSeriesEvent record = new TimeSeriesEvent();
        record.correlationId = fieldSetFlags()[0] ? this.correlationId : (java.lang.String) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.timeout = fieldSetFlags()[2] ? this.timeout : (java.lang.Long) defaultValue(fields()[2]);
        record.appVersionName = fieldSetFlags()[3] ? this.appVersionName : (java.lang.String) defaultValue(fields()[3]);
        record.endpointId = fieldSetFlags()[4] ? this.endpointId : (java.lang.String) defaultValue(fields()[4]);
        record.timeSeriesName = fieldSetFlags()[5] ? this.timeSeriesName : (java.lang.String) defaultValue(fields()[5]);
        record.dataPoints = fieldSetFlags()[6] ? this.dataPoints : (java.util.List<org.kaaproject.ipc.tstp.gen.v1.DataPoint>) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TimeSeriesEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<TimeSeriesEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TimeSeriesEvent>
    READER$ = (org.apache.avro.io.DatumReader<TimeSeriesEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










